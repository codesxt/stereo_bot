<?xml version="1.0"?>
<launch>
	<arg name="gui" default="False" />

	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(find stereo_bot_gazebo)/worlds/stereo_bot.world"/>
	</include>

	<param name="use_gui" value="$(arg gui)"/>

	<!-- Convierte la descripci칩n en xacro a urdf y la publica en el servidor de par치metros -->
	<param name="robot_description" command="$(find xacro)/xacro.py $(find stereo_bot_description)/urdf/stereo_bot.xacro" />

	<rosparam file="$(find stereo_bot_control)/config/stereo_bot.yaml" command="load"/>

	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

   	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
		<remap from="/joint_states" to="/stereo_bot/joint_states" />
	</node>

   	<!-- Carga en Gazebo el robot publicado en el servidor de par치metros -->
	<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model stereo_bot" />

	<!-- Carga los controladores -->
	<node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/stereo_bot" args="joint_state_controller neck_position_controller"/>

	<!-- Abre Rviz con el archivo de configuraci칩n personalizado -->
	<node name="rviz" pkg="rviz" type="rviz" args="-d $(find stereo_bot_control)/rviz/config.rviz"/>
</launch>